{"version":3,"sources":["components/Filter.js","components/Persons.js","components/Notification.js","components/NewPerson.js","services/person.js","App.js","index.js"],"names":["Filter","value","onChange","Person","person","onClickDelete","name","number","onClick","Persons","persons","deletePersonHandler","map","id","Notification","message","className","NewPerson","props","onSubmit","addNewPerson","newName","handleNameChange","newNumber","handleNumberChange","type","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","update","put","del","delete","App","useState","setPersons","setNewName","setNewNumber","filter","setFilter","notification","setNotification","useEffect","initialPersons","catch","err","console","log","filteredPersons","toLowerCase","includes","event","target","preventDefault","newPerson","currentPersons","concat","setTimeout","body","error","msg","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85eda25b.chunk.js","sourcesContent":["const Filter = ({ value, onChange }) => {\n    return (\n        <div>\n            filter shown with <input value={value} onChange={onChange} />\n        </div>\n    );\n};\n\nexport default Filter;","const Person = ({ person, onClickDelete }) => {\n    return (\n        <div>\n            {person.name} {person.number} <button onClick={onClickDelete}>delete</button>\n        </div>\n    );\n};\n\nconst Persons = ({ persons, deletePersonHandler }) => {\n    return (\n        <div>\n            {persons.map(person => <Person key={person.id} person={person} onClickDelete={() => { deletePersonHandler(person.id); }} />)}\n        </div>\n    );\n};\n\nexport default Persons;","const Notification = ({ message }) => {\n    if (message === null) {\n        return null;\n    }\n\n    return (\n        <div className={message ? \"active\" : null}>\n            {message}\n        </div>\n    );\n};\n\nexport default Notification;","const NewPerson = (props) => {\n    return (\n        <form onSubmit={props.addNewPerson}>\n            <div>\n                name: <input value={props.newName} onChange={props.handleNameChange} />\n            </div>\n            <div>number: <input value={props.newNumber} onChange={props.handleNumberChange} /></div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    );\n};\n\nexport default NewPerson;","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const response = axios.get(baseUrl);\n    return response.then(response => response.data);\n};\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(response => response.data);\n};\n\nconst del = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n    return request;\n    // return request.then(response => response)\n};\n\nconst personService = {\n    getAll,\n    create,\n    update,\n    del,\n};\nexport default personService;","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport NewPerson from './components/NewPerson';\nimport personService from './services/person';\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [filter, setFilter] = useState('');\n    const [notification, setNotification] = useState(null);\n\n    // get notes from server\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }, []);\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value);\n    };\n\n    const addNewPerson = (event) => {\n        event.preventDefault();\n\n        // Create new person\n        const newPerson = {\n            name: newName,\n            number: newNumber,\n        };\n\n        personService\n            .create(newPerson)\n            .then(person => {\n                setPersons(currentPersons => currentPersons.concat(person));\n                setNewName('');\n                setNewNumber('');\n                setNotification(`Added ${person.name} to phonebook`);\n                setTimeout(() => {\n                    setNotification(null);\n                }, 3000);\n            })\n            .catch(err => {\n                const body = err.response.data;\n                setNotification(`${body.error.msg}`);\n                setTimeout(() => {\n                    setNotification(null);\n                }, 3000);\n            });\n    };\n\n    // delete person\n    const deletePerson = (id) => {\n        personService\n            .del(id)\n            .then(response => {\n                setPersons(currentPersons => currentPersons.filter(person => person.id !== id));\n            })\n            .catch(err => {\n                setPersons(currentPersons => currentPersons.filter(person => person.id !== id));\n                setNotification(`already deleted`);\n                setTimeout(() => {\n                    setNotification('');\n                }, 3000);\n            });\n    };\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value);\n    };\n\n    // For handling filter by persons.name\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value);\n    };\n\n    // For handling filter by person.name\n    const filteredPersons = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()) === true);\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={notification} />\n            <Filter value={filter} onChange={handleFilterChange} />\n            <NewPerson addNewPerson={addNewPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n            <Persons persons={filteredPersons} deletePersonHandler={deletePerson} />\n        </div>\n    );\n};\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}